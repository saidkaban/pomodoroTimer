{"version":3,"sources":["store/clock-context.js","store/ClockProvider.js","components/LengthControl.js","components/SessionView.js","components/Controls.js","App.js","index.js"],"names":["ClockContext","createContext","ClockProvider","props","timer","useState","breakLength","setBreakLength","sessionLength","setSessionLength","current","setCurrent","timerOn","setTimerOn","useEffect","setInterval","prev","clearInterval","document","getElementById","play","clockContext","breakDecrement","breakIncrement","sessionDecrement","sessionIncrement","reset","audio","pause","currentTime","startStop","Provider","value","children","LengthControl","clockCtx","useContext","id","onClick","disabled","SessionView","timeLeft","Date","toISOString","substr","src","Controls","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.7120033a.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst ClockContext = createContext({});\n\nexport default ClockContext;\n","import { useEffect, useState } from \"react\";\nimport ClockContext from \"./clock-context\";\n\nconst ClockProvider = (props) => {\n  const [breakLength, setBreakLength] = useState(5);\n  const [sessionLength, setSessionLength] = useState(25);\n  const [current, setCurrent] = useState([\"Session\", sessionLength * 60]);\n  const [timerOn, setTimerOn] = useState(false);\n\n  const breakDecrementHandler = () => {\n    if (breakLength > 1 && !timerOn) {\n      setBreakLength((prev) => prev - 1);\n      if (current[0] === \"Break\") {\n        setCurrent((prev) => [\"Break\", prev[1] - 60]);\n      }\n    }\n  };\n\n  const breakIncrementHandler = () => {\n    if (breakLength < 60 && !timerOn) {\n      setBreakLength((prev) => prev + 1);\n      if (current[0] === \"Break\") {\n        setCurrent((prev) => [\"Break\", prev[1] + 60]);\n      }\n    }\n  };\n\n  const sessionDecrementHandler = () => {\n    if (sessionLength > 1 && !timerOn) {\n      setSessionLength((prev) => prev - 1);\n      if (current[0] === \"Session\") {\n        setCurrent((prev) => [\"Session\", prev[1] - 60]);\n      }\n    }\n  };\n\n  const sessionIncrementHandler = () => {\n    if (sessionLength < 60 && !timerOn) {\n      setSessionLength((prev) => prev + 1);\n      if (current[0] === \"Session\") {\n        setCurrent((prev) => [\"Session\", prev[1] + 60]);\n      }\n    }\n  };\n\n  const startStopHandler = () => {\n    setTimerOn((prev) => !prev);\n  };\n\n  const resetHandler = () => {\n    setTimerOn(false);\n    setBreakLength(5);\n    setSessionLength(25);\n    setCurrent([\"Session\", 1500]);\n    const audio = document.getElementById(\"beep\");\n    audio.pause();\n    audio.currentTime = 0;\n  };\n\n  let timer;\n\n  useEffect(() => {\n    if (timerOn) {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      timer = setInterval(() => {\n        setCurrent((prev) => [prev[0], prev[1] - 1]);\n      }, 1000);\n    }\n    return () => {\n      clearInterval(timer);\n    };\n  }, [timerOn]);\n\n  useEffect(() => {\n    if (current[1] === 0) {\n      const audio = document.getElementById(\"beep\");\n      audio.play();\n      current[0] === \"Session\"\n        ? setCurrent([\"Break\", breakLength * 60])\n        : setCurrent([\"Session\", sessionLength * 60]);\n    }\n  }, [current, breakLength, sessionLength]);\n\n  const clockContext = {\n    breakLength: breakLength,\n    sessionLength: sessionLength,\n    current: current,\n    breakDecrement: breakDecrementHandler,\n    breakIncrement: breakIncrementHandler,\n    sessionDecrement: sessionDecrementHandler,\n    sessionIncrement: sessionIncrementHandler,\n    reset: resetHandler,\n    startStop: startStopHandler,\n  };\n\n  return (\n    <ClockContext.Provider value={clockContext}>\n      {props.children}\n    </ClockContext.Provider>\n  );\n};\n\nexport default ClockProvider;\n","import { useContext } from \"react\";\nimport ClockContext from \"../store/clock-context\";\n\nconst LengthControl = (props) => {\n  const clockCtx = useContext(ClockContext);\n\n  return (\n    <div id=\"length-control\">\n      <div id=\"break\">\n        <h2 id=\"break-label\">Break Length</h2>\n        <div id=\"break-controls\">\n          <h2\n            id=\"break-decrement\"\n            onClick={clockCtx.breakDecrement}\n            disabled={clockCtx.timerOn}\n          >\n            &darr;\n          </h2>\n          <h2 id=\"break-length\">{clockCtx.breakLength}</h2>\n          <h2 id=\"break-increment\" onClick={clockCtx.breakIncrement}>\n            &uarr;\n          </h2>\n        </div>\n      </div>\n      <div id=\"session\">\n        <h2 id=\"session-label\">Session Length</h2>\n        <div id=\"session-controls\">\n          <h2 id=\"session-decrement\" onClick={clockCtx.sessionDecrement}>\n            &darr;\n          </h2>\n          <h2 id=\"session-length\">{clockCtx.sessionLength}</h2>\n          <h2 id=\"session-increment\" onClick={clockCtx.sessionIncrement}>\n            &uarr;\n          </h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LengthControl;\n","import { useContext } from \"react\";\nimport ClockContext from \"../store/clock-context\";\n\nconst SessionView = () => {\n  const clockCtx = useContext(ClockContext);\n\n  let timeLeft = new Date(clockCtx.current[1] * 1000)\n    .toISOString()\n    .substr(14, 5);\n  if (\n    new Date(clockCtx.current[1] * 1000).toISOString().substr(12, 7) ===\n    \"1:00:00\"\n  )\n    timeLeft = \"60:00\";\n\n  return (\n    <div id=\"session-view\">\n      <h3 id=\"timer-label\">{clockCtx.current[0]}</h3>\n      <h1 id=\"time-left\">{timeLeft}</h1>\n      <audio\n        src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-audio/t-rex-roar.mp3\"\n        id=\"beep\"\n      ></audio>\n    </div>\n  );\n};\n\nexport default SessionView;\n","import { useContext } from \"react\";\nimport ClockContext from \"../store/clock-context\";\n\nconst Controls = (props) => {\n  const clockCtx = useContext(ClockContext);\n\n  return (\n    <div id=\"controls\">\n      <h1 id=\"start_stop\" onClick={clockCtx.startStop}>\n        &#9658;||\n      </h1>\n      <h1 id=\"reset\" onClick={clockCtx.reset}>\n        â†»\n      </h1>\n    </div>\n  );\n};\n\nexport default Controls;\n","import ClockProvider from \"./store/ClockProvider\";\nimport LengthControl from \"./components/LengthControl\";\nimport SessionView from \"./components/SessionView\";\nimport Controls from \"./components/Controls\";\n\nconst App = () => {\n  return (\n    <ClockProvider>\n      <div id=\"wrapper\">\n        <h1>25 + 5 Clock</h1>\n        <LengthControl />\n        <SessionView />\n        <Controls />\n      </div>\n    </ClockProvider>\n  );\n};\n\nexport default App;\n","import React, { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Fragment>\n    <App />\n  </Fragment>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}